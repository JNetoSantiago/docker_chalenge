version: '3'
services:
  chalenge_docker:
    build: .
    container_name: chalenge_docker
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails db:prepare && bundle exec rails server -b 0.0.0.0 -p 3000"
    volumes:
      - .:/app
    env_file:
      - '.env'
    ports:
      - "3000:3000"
    depends_on:
      postgres_chalenge:
        condition: service_healthy
      redis_chalenge:
        condition: service_started

  sidekiq_chalenge:
    build: .
    container_name: sidekiq_chalenge
    command: bundle exec sidekiq
    volumes:
      - .:/app
    env_file:
      - '.env'
    depends_on:
      postgres_chalenge:
        condition: service_healthy
      redis_chalenge:
        condition: service_started

  postgres_chalenge:
    container_name: chalenge_pg
    image: postgres:14
    ports:
      - '127.0.0.1:5432:5432'
    volumes:
      - ./data/pg:/var/lib/postgresql/data
    env_file:
      - '.env'
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  
  redis_chalenge:
    container_name: redis_chalenge
    image: redis:latest
    command: redis-server
    ports:
      - '127.0.0.1:6379:6379'
    volumes:
      - ./data/redis:/data:delegated
    env_file:
      - '.env'

  nginx_chalenge:
    image: nginx:latest
    container_name: nginx_chalenge
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./html:/usr/share/nginx/html
    restart: always
    depends_on:
      - chalenge_docker
